{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\phonegenerator\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Header from \"./header\";\nimport SubTitle from \"./subTitle\";\nimport NumberInput from \"./numberInput\";\nimport Sorter from \"./sorter\";\nimport GeneratedNumbers from \"./generatedNumbers\";\nimport ExportButton from \"./exportButton\";\nimport Statistics from \"./statistics\";\nimport Error from \"./error\";\nimport saveAs from 'file-saver';\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: false,\n      message: \"\",\n      limit: 1,\n      phoneNumbers: [],\n      min: null,\n      max: null,\n      total: 0,\n      sorter: 'asc',\n      countryCode: ''\n    };\n    this.generateRandomPhoneNumber = event => {\n      event.preventDefault();\n      const {\n        limit,\n        countryCode\n      } = this.state;\n      if (limit <= 0 || limit > 10000) return this.setState({\n        error: true,\n        message: \"The number entered exceeds/below the accepted limit\"\n      });\n      let phoneNumbers = [];\n      let phoneNumber = 0;\n      while (phoneNumber < limit) {\n        phoneNumbers.push(countryCode + '0' + Math.floor(Math.random() * 900000000 + 100000000));\n        phoneNumber++;\n      }\n      return this.setState({\n        phoneNumbers\n      }, async () => {\n        await this.setStatistics();\n        this.sortPhoneNumbers();\n      });\n    };\n    this.onGetUserInput = async event => {\n      event.preventDefault();\n      const limit = event.target.value;\n      try {\n        if (Math.floor(Number(limit))) {\n          this.setState({\n            limit\n          });\n        }\n      } catch (e) {\n        console.log('an error has occurred', e.message);\n      }\n    };\n    this.onCountryCodeChange = async event => {\n      event.preventDefault();\n      const countryCode = event.target.value;\n      this.setState({\n        countryCode\n      });\n    };\n    this.setStatistics = () => {\n      const {\n        phoneNumbers\n      } = this.state;\n      if (phoneNumbers.length > 0) {\n        const min = Math.min(...phoneNumbers);\n        const max = Math.max(...phoneNumbers);\n        const total = phoneNumbers.length;\n        this.setState({\n          min,\n          max,\n          total\n        });\n      }\n    };\n    this.exportPhoneNumbers = () => {\n      const {\n        phoneNumbers\n      } = this.state;\n      if (phoneNumbers.length > 0) {\n        saveAs(new Blob(phoneNumbers, {\n          type: \"text/csv;charset=utf-8\"\n        }), 'phoneNumbers.csv');\n      }\n    };\n    this.sortPhoneNumbers = () => {\n      const {\n        sorter,\n        phoneNumbers\n      } = this.state;\n      if (!phoneNumbers.length > 0) return;\n      if (sorter === 'asc') {\n        this.setState({\n          phoneNumbers: phoneNumbers.sort((a, b) => 0 - (a > b ? -1 : 1))\n        });\n      } else {\n        this.setState({\n          phoneNumbers: phoneNumbers.sort((a, b) => 0 - (a > b ? 1 : -1))\n        });\n      }\n    };\n    this.onSortChange = event => {\n      event.preventDefault();\n      const sorter = event.target.value;\n      this.setState({\n        sorter\n      }, () => this.sortPhoneNumbers());\n    };\n  }\n  render() {\n    const {\n      error,\n      message,\n      phoneNumbers,\n      min,\n      max,\n      total\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SubTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Error, {\n      error: error,\n      message: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NumberInput, {\n      onClick: this.generateRandomPhoneNumber,\n      onChange: this.onGetUserInput,\n      onCountryCodeChange: this.onCountryCodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Sorter, {\n      phoneNumbers: phoneNumbers,\n      onChange: this.onSortChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(GeneratedNumbers, {\n      phoneNumbers: phoneNumbers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ExportButton, {\n      phoneNumbers: phoneNumbers,\n      onClick: this.exportPhoneNumbers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Statistics, {\n      phoneNumbers: phoneNumbers,\n      min: min,\n      max: max,\n      total: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }))));\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Header","SubTitle","NumberInput","Sorter","GeneratedNumbers","ExportButton","Statistics","Error","saveAs","App","constructor","arguments","state","error","message","limit","phoneNumbers","min","max","total","sorter","countryCode","generateRandomPhoneNumber","event","preventDefault","setState","phoneNumber","push","Math","floor","random","setStatistics","sortPhoneNumbers","onGetUserInput","target","value","Number","e","console","log","onCountryCodeChange","length","exportPhoneNumbers","Blob","type","sort","a","b","onSortChange","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange"],"sources":["C:/Users/USER/Desktop/phonegenerator/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Header from \"./header\";\r\nimport SubTitle from \"./subTitle\";\r\nimport NumberInput from \"./numberInput\";\r\nimport Sorter from \"./sorter\";\r\nimport GeneratedNumbers from \"./generatedNumbers\";\r\nimport ExportButton from \"./exportButton\";\r\nimport Statistics from \"./statistics\";\r\nimport Error from \"./error\";\r\nimport saveAs from 'file-saver';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    error: false,\r\n    message: \"\",\r\n    limit: 1,\r\n    phoneNumbers: [],\r\n    min: null,\r\n    max: null,\r\n    total: 0,\r\n    sorter: 'asc',\r\n    countryCode: ''\r\n  };\r\n\r\n  generateRandomPhoneNumber = event => {\r\n    event.preventDefault();\r\n    const { limit, countryCode } = this.state;\r\n    if (limit <= 0 || limit > 10000) return this.setState({\r\n      error: true,\r\n      message: \"The number entered exceeds/below the accepted limit\"\r\n    });\r\n    let phoneNumbers = [];\r\n    let phoneNumber = 0;\r\n    while (phoneNumber < limit) {\r\n      phoneNumbers.push(countryCode + '0' + Math.floor(Math.random() * 900000000 + 100000000));\r\n      phoneNumber++;\r\n    }\r\n    return this.setState({\r\n      phoneNumbers\r\n    }, async () => {\r\n      await this.setStatistics();\r\n      this.sortPhoneNumbers()\r\n    });\r\n  };\r\n\r\n  onGetUserInput = async event => {\r\n    event.preventDefault();\r\n    const limit = event.target.value;\r\n    try {\r\n      if (Math.floor(Number(limit))) {\r\n        this.setState({\r\n          limit\r\n        })\r\n      }\r\n    } catch (e) {\r\n      console.log('an error has occurred', e.message)\r\n    }\r\n  };\r\n\r\n  onCountryCodeChange = async event => {\r\n    event.preventDefault();\r\n    const countryCode = event.target.value;\r\n    this.setState({ countryCode });\r\n  };\r\n\r\n  setStatistics = () => {\r\n    const { phoneNumbers } = this.state;\r\n    if (phoneNumbers.length > 0) {\r\n      const min = Math.min(...phoneNumbers);\r\n      const max = Math.max(...phoneNumbers);\r\n      const total = phoneNumbers.length;\r\n      this.setState({\r\n        min,\r\n        max,\r\n        total\r\n      })\r\n    }\r\n  };\r\n\r\n  exportPhoneNumbers = () => {\r\n    const { phoneNumbers } = this.state;\r\n    if (phoneNumbers.length > 0) {\r\n      saveAs(new Blob(phoneNumbers, { type: \"text/csv;charset=utf-8\" }), 'phoneNumbers.csv')\r\n    }\r\n  };\r\n\r\n  sortPhoneNumbers = () => {\r\n    const { sorter, phoneNumbers } = this.state;\r\n    if (!phoneNumbers.length > 0) return;\r\n    if(sorter === 'asc'){\r\n      this.setState({\r\n        phoneNumbers : phoneNumbers.sort((a,b) => 0 - (a > b ? -1 : 1))\r\n      });\r\n    } else {\r\n      this.setState({\r\n        phoneNumbers : phoneNumbers.sort((a,b) => 0 - (a > b ? 1 : -1))\r\n      })\r\n    }\r\n  };\r\n\r\n  onSortChange = event => {\r\n    event.preventDefault();\r\n    const sorter = event.target.value;\r\n    this.setState({\r\n      sorter\r\n    }, () => this.sortPhoneNumbers());\r\n  };\r\n\r\n  render() {\r\n    const { error, message, phoneNumbers, min, max, total } = this.state;\r\n    return (\r\n        <div>\r\n          <Header/>\r\n          <div>\r\n            <SubTitle/>\r\n            <div className=\"App-body\">\r\n              <Error\r\n                  error={error}\r\n                  message={message}\r\n              />\r\n              <NumberInput\r\n                  onClick={this.generateRandomPhoneNumber}\r\n                  onChange={this.onGetUserInput}\r\n                  onCountryCodeChange={this.onCountryCodeChange}\r\n              />\r\n              <Sorter\r\n                  phoneNumbers={phoneNumbers}\r\n                  onChange={this.onSortChange}\r\n              />\r\n              <GeneratedNumbers\r\n                  phoneNumbers={phoneNumbers}\r\n              />\r\n              <ExportButton\r\n                  phoneNumbers={phoneNumbers}\r\n                  onClick={this.exportPhoneNumbers}\r\n              />\r\n              <Statistics\r\n                  phoneNumbers={phoneNumbers}\r\n                  min={min}\r\n                  max={max}\r\n                  total={total}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}