{"ast":null,"code":"/** @license React v16.5.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var _assign = require('object-assign');\n    var checkPropTypes = require('prop-types/checkPropTypes');\n\n    // TODO: this is special because it gets imported during build.\n\n    var ReactVersion = '16.5.2';\n\n    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n    var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\n    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n    var REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n      return null;\n    }\n\n    // Exports ReactDOM.createRoot\n\n    // Experimental error-boundary API that can recover from errors within a single\n    // render phase\n\n    // Suspense\n    var enableSuspense = false;\n    // Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n    // In some cases, StrictMode should also double-render lifecycles.\n    // This can be confusing for tests though,\n    // And it can be bad for performance in production.\n    // This feature flag can be used to control the behavior:\n\n    // To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n    // replay the begin phase of a failed component inside invokeGuardedCallback.\n\n    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n    // Warn about legacy context API\n\n    // Gather advanced timing metrics for Profiler subtrees.\n\n    // Trace which interactions trigger each commit.\n\n    // Only used in www builds.\n\n    // Only used in www builds.\n\n    // React Fire: prevent the value and checked attributes from syncing\n    // with their related DOM properties\n\n    /**\n     * Use invariant() to assert state which your program assumes to be true.\n     *\n     * Provide sprintf-style format (only %s is supported) and arguments\n     * to provide information about what broke and what you were\n     * expecting.\n     *\n     * The invariant message will be stripped in production, but the invariant\n     * will remain to ensure logic does not differ in production.\n     */\n\n    var validateFormat = function () {};\n    {\n      validateFormat = function (format) {\n        if (format === undefined) {\n          throw new Error('invariant requires an error message argument');\n        }\n      };\n    }\n    function invariant(condition, format, a, b, c, d, e, f) {\n      validateFormat(format);\n      if (!condition) {\n        var error = void 0;\n        if (format === undefined) {\n          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n        } else {\n          var args = [a, b, c, d, e, f];\n          var argIndex = 0;\n          error = new Error(format.replace(/%s/g, function () {\n            return args[argIndex++];\n          }));\n          error.name = 'Invariant Violation';\n        }\n        error.framesToPop = 1; // we don't care about invariant's own frame\n        throw error;\n      }\n    }\n\n    // Relying on the `invariant()` implementation lets us\n    // preserve the format and params in the www builds.\n\n    /**\n     * Forked from fbjs/warning:\n     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n     *\n     * Only change is we use console.warn instead of console.error,\n     * and do nothing when 'console' is not supported.\n     * This really simplifies the code.\n     * ---\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n    var lowPriorityWarning = function () {};\n    {\n      var printWarning = function (format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n        if (typeof console !== 'undefined') {\n          console.warn(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n      lowPriorityWarning = function (condition, format) {\n        if (format === undefined) {\n          throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n    var lowPriorityWarning$1 = lowPriorityWarning;\n\n    /**\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n    var warningWithoutStack = function () {};\n    {\n      warningWithoutStack = function (condition, format) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n        if (format === undefined) {\n          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n        if (args.length > 8) {\n          // Check before the condition to catch violations early.\n          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n        }\n        if (condition) {\n          return;\n        }\n        if (typeof console !== 'undefined') {\n          var _args$map = args.map(function (item) {\n              return '' + item;\n            }),\n            a = _args$map[0],\n            b = _args$map[1],\n            c = _args$map[2],\n            d = _args$map[3],\n            e = _args$map[4],\n            f = _args$map[5],\n            g = _args$map[6],\n            h = _args$map[7];\n          var message = 'Warning: ' + format;\n\n          // We intentionally don't use spread (or .apply) because it breaks IE9:\n          // https://github.com/facebook/react/issues/13610\n          switch (args.length) {\n            case 0:\n              console.error(message);\n              break;\n            case 1:\n              console.error(message, a);\n              break;\n            case 2:\n              console.error(message, a, b);\n              break;\n            case 3:\n              console.error(message, a, b, c);\n              break;\n            case 4:\n              console.error(message, a, b, c, d);\n              break;\n            case 5:\n              console.error(message, a, b, c, d, e);\n              break;\n            case 6:\n              console.error(message, a, b, c, d, e, f);\n              break;\n            case 7:\n              console.error(message, a, b, c, d, e, f, g);\n              break;\n            case 8:\n              console.error(message, a, b, c, d, e, f, g, h);\n              break;\n            default:\n              throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n          }\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          var argIndex = 0;\n          var _message = 'Warning: ' + format.replace(/%s/g, function () {\n            return args[argIndex++];\n          });\n          throw new Error(_message);\n        } catch (x) {}\n      };\n    }\n    var warningWithoutStack$1 = warningWithoutStack;\n    var didWarnStateUpdateForUnmountedComponent = {};\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + '.' + callerName;\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n        warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n\n    /**\n     * This is the abstract API for an update queue.\n     */\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      // If a component has string refs, we will assign a different object later.\n      this.refs = emptyObject;\n      // We initialize the default updater but the real one gets injected by the\n      // renderer.\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    Component.prototype.isReactComponent = {};\n\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n    Component.prototype.setState = function (partialState, callback) {\n      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n    function ComponentDummy() {}\n    ComponentDummy.prototype = Component.prototype;\n\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      // If a component has string refs, we will assign a different object later.\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent;\n    // Avoid an extra prototype jump for these methods.\n    _assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true;\n\n    // an immutable object with a single mutable value\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null,\n      currentDispatcher: null\n    };\n    var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n    var describeComponentFrame = function (name, source, ownerName) {\n      var sourceInfo = '';\n      if (source) {\n        var path = source.fileName;\n        var fileName = path.replace(BEFORE_SLASH_RE, '');\n        {\n          // In DEV, include code for a common special case:\n          // prefer \"folder/index.js\" instead of just \"index.js\".\n          if (/^index\\./.test(fileName)) {\n            var match = path.match(BEFORE_SLASH_RE);\n            if (match) {\n              var pathBeforeSlash = match[1];\n              if (pathBeforeSlash) {\n                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n                fileName = folderName + '/' + fileName;\n              }\n            }\n          }\n        }\n        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n      } else if (ownerName) {\n        sourceInfo = ' (created by ' + ownerName + ')';\n      }\n      return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n    };\n    var Resolved = 1;\n    function refineResolvedThenable(thenable) {\n      return thenable._reactStatus === Resolved ? thenable._reactResult : null;\n    }\n    function getComponentName(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n      {\n        if (typeof type.tag === 'number') {\n          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n        }\n      }\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      switch (type) {\n        case REACT_ASYNC_MODE_TYPE:\n          return 'AsyncMode';\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n        case REACT_PLACEHOLDER_TYPE:\n          return 'Placeholder';\n      }\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            return 'Context.Consumer';\n          case REACT_PROVIDER_TYPE:\n            return 'Context.Provider';\n          case REACT_FORWARD_REF_TYPE:\n            var renderFn = type.render;\n            var functionName = renderFn.displayName || renderFn.name || '';\n            return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n        }\n        if (typeof type.then === 'function') {\n          var thenable = type;\n          var resolvedThenable = refineResolvedThenable(thenable);\n          if (resolvedThenable) {\n            return getComponentName(resolvedThenable);\n          }\n        }\n      }\n      return null;\n    }\n    var ReactDebugCurrentFrame = {};\n    var currentlyValidatingElement = null;\n    function setCurrentlyValidatingElement(element) {\n      {\n        currentlyValidatingElement = element;\n      }\n    }\n    {\n      // Stack implementation injected by the current renderer.\n      ReactDebugCurrentFrame.getCurrentStack = null;\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var stack = '';\n\n        // Add an extra top frame while an element is being validated\n        if (currentlyValidatingElement) {\n          var name = getComponentName(currentlyValidatingElement.type);\n          var owner = currentlyValidatingElement._owner;\n          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n        }\n\n        // Delegate to the injected renderer-specific implementation\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n        if (impl) {\n          stack += impl() || '';\n        }\n        return stack;\n      };\n    }\n    var ReactSharedInternals = {\n      ReactCurrentOwner: ReactCurrentOwner,\n      // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n      assign: _assign\n    };\n    {\n      _assign(ReactSharedInternals, {\n        // These should not be included in production.\n        ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n        // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n        // TODO: remove in React 17.0.\n        ReactComponentTreeHook: {}\n      });\n    }\n\n    /**\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n    var warning = warningWithoutStack$1;\n    {\n      warning = function (condition, format) {\n        if (condition) {\n          return;\n        }\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n        // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n        warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n      };\n    }\n    var warning$1 = warning;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown = void 0;\n    var specialPropRefWarningShown = void 0;\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function () {\n        if (!specialPropKeyWarningShown) {\n          specialPropKeyWarningShown = true;\n          warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n          warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, no instanceof check\n     * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @param {*} owner\n     * @param {*} props\n     * @internal\n     */\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {};\n\n        // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        });\n        // self and source are DEV only properties.\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        });\n        // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n    function createElement(type, config, children) {\n      var propName = void 0;\n\n      // Reserved names are extracted\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n        }\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source;\n        // Remaining properties are added to a new props object\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      }\n\n      // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      }\n\n      // Resolve default props\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n      {\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n\n    /**\n     * Return a function that produces ReactElements of a given type.\n     * See https://reactjs.org/docs/react-api.html#createfactory\n     */\n\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n    function cloneElement(element, config, children) {\n      !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n      var propName = void 0;\n\n      // Original props are copied\n      var props = _assign({}, element.props);\n\n      // Reserved names are extracted\n      var key = element.key;\n      var ref = element.ref;\n      // Self is preserved since the owner is preserved.\n      var self = element._self;\n      // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n      var source = element._source;\n\n      // Owner will be preserved, unless ref is overridden\n      var owner = element._owner;\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n\n        // Remaining properties override existing props\n        var defaultProps = void 0;\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      }\n\n      // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n      var childrenLength = arguments.length - 2;\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n        props.children = childArray;\n      }\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = ('' + key).replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n    function escapeUserProvidedKey(text) {\n      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    var POOL_SIZE = 10;\n    var traverseContextPool = [];\n    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n      if (traverseContextPool.length) {\n        var traverseContext = traverseContextPool.pop();\n        traverseContext.result = mapResult;\n        traverseContext.keyPrefix = keyPrefix;\n        traverseContext.func = mapFunction;\n        traverseContext.context = mapContext;\n        traverseContext.count = 0;\n        return traverseContext;\n      } else {\n        return {\n          result: mapResult,\n          keyPrefix: keyPrefix,\n          func: mapFunction,\n          context: mapContext,\n          count: 0\n        };\n      }\n    }\n    function releaseTraverseContext(traverseContext) {\n      traverseContext.result = null;\n      traverseContext.keyPrefix = null;\n      traverseContext.func = null;\n      traverseContext.context = null;\n      traverseContext.count = 0;\n      if (traverseContextPool.length < POOL_SIZE) {\n        traverseContextPool.push(traverseContext);\n      }\n    }\n\n    /**\n     * @param {?*} children Children tree container.\n     * @param {!string} nameSoFar Name of the key path so far.\n     * @param {!function} callback Callback to invoke with each child found.\n     * @param {?*} traverseContext Used to pass information throughout the traversal\n     * process.\n     * @return {!number} The number of children in this subtree.\n     */\n    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n      var type = typeof children;\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n      var invokeCallback = false;\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n        }\n      }\n      if (invokeCallback) {\n        callback(traverseContext, children,\n        // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows.\n        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n        return 1;\n      }\n      var child = void 0;\n      var nextName = void 0;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n      if (Array.isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getComponentKey(child, i);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === children.entries) {\n              !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(children);\n          var step = void 0;\n          var ii = 0;\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getComponentKey(child, ii++);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        } else if (type === 'object') {\n          var addendum = '';\n          {\n            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n          }\n          var childrenString = '' + children;\n          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n        }\n      }\n      return subtreeCount;\n    }\n\n    /**\n     * Traverses children that are typically specified as `props.children`, but\n     * might also be specified through attributes:\n     *\n     * - `traverseAllChildren(this.props.children, ...)`\n     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n     *\n     * The `traverseContext` is an optional argument that is passed through the\n     * entire traversal. It can be used to store accumulations or anything else that\n     * the callback might find relevant.\n     *\n     * @param {?*} children Children tree object.\n     * @param {!function} callback To invoke upon traversing each child.\n     * @param {?*} traverseContext Context for traversal.\n     * @return {!number} The number of children in this subtree.\n     */\n    function traverseAllChildren(children, callback, traverseContext) {\n      if (children == null) {\n        return 0;\n      }\n      return traverseAllChildrenImpl(children, '', callback, traverseContext);\n    }\n\n    /**\n     * Generate a key string that identifies a component within a set.\n     *\n     * @param {*} component A component that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n    function getComponentKey(component, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof component === 'object' && component !== null && component.key != null) {\n        // Explicit key\n        return escape(component.key);\n      }\n      // Implicit key determined by the index in the set\n      return index.toString(36);\n    }\n    function forEachSingleChild(bookKeeping, child, name) {\n      var func = bookKeeping.func,\n        context = bookKeeping.context;\n      func.call(context, child, bookKeeping.count++);\n    }\n\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      if (children == null) {\n        return children;\n      }\n      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n      traverseAllChildren(children, forEachSingleChild, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n    function mapSingleChildIntoContext(bookKeeping, child, childKey) {\n      var result = bookKeeping.result,\n        keyPrefix = bookKeeping.keyPrefix,\n        func = bookKeeping.func,\n        context = bookKeeping.context;\n      var mappedChild = func.call(context, child, bookKeeping.count++);\n      if (Array.isArray(mappedChild)) {\n        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n          return c;\n        });\n      } else if (mappedChild != null) {\n        if (isValidElement(mappedChild)) {\n          mappedChild = cloneAndReplaceKey(mappedChild,\n          // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n        }\n        result.push(mappedChild);\n      }\n    }\n    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n      var escapedPrefix = '';\n      if (prefix != null) {\n        escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n      }\n      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, key, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n      return result;\n    }\n\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n    function countChildren(children) {\n      return traverseAllChildren(children, function () {\n        return null;\n      }, null);\n    }\n\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n    function toArray(children) {\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n        return child;\n      });\n      return result;\n    }\n\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n    function onlyChild(children) {\n      !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n      return children;\n    }\n    function readContext(context, observedBits) {\n      var dispatcher = ReactCurrentOwner.currentDispatcher;\n      !(dispatcher !== null) ? invariant(false, 'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;\n      return dispatcher.readContext(context, observedBits);\n    }\n    function createContext(defaultValue, calculateChangedBits) {\n      if (calculateChangedBits === undefined) {\n        calculateChangedBits = null;\n      } else {\n        {\n          !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n        }\n      }\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        _calculateChangedBits: calculateChangedBits,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // These are circular\n        Provider: null,\n        Consumer: null,\n        unstable_read: null\n      };\n      context.Provider = {\n        $$typeof: REACT_PROVIDER_TYPE,\n        _context: context\n      };\n      context.Consumer = context;\n      context.unstable_read = readContext.bind(null, context);\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n    function lazy(ctor) {\n      var thenable = null;\n      return {\n        then: function (resolve, reject) {\n          if (thenable === null) {\n            // Lazily create thenable by wrapping in an extra thenable.\n            thenable = ctor();\n            ctor = null;\n          }\n          return thenable.then(resolve, reject);\n        },\n        // React uses these fields to store the result.\n        _reactStatus: -1,\n        _reactResult: null\n      };\n    }\n    function forwardRef(render) {\n      {\n        if (typeof render !== 'function') {\n          warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          !(\n          // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n          render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\n        }\n        if (render != null) {\n          !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n        }\n      }\n      return {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n    }\n    function isValidElementType(type) {\n      return typeof type === 'string' || typeof type === 'function' ||\n      // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n      type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n    }\n\n    /**\n     * ReactElementValidator provides a wrapper around a element factory\n     * which validates the props passed to the element. This is intended to be\n     * used only in DEV and could be replaced by a static type checker for languages\n     * that support it.\n     */\n\n    var propTypesMisspellWarningShown = void 0;\n    {\n      propTypesMisspellWarningShown = false;\n    }\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentName(ReactCurrentOwner.current.type);\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n      return '';\n    }\n    function getSourceInfoErrorAddendum(elementProps) {\n      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n        var source = elementProps.__source;\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n      return '';\n    }\n\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n    var ownerHasKeyUseWarning = {};\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n        if (parentName) {\n          info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n        }\n      }\n      return info;\n    }\n\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n      // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n      var childOwner = '';\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\n      }\n      setCurrentlyValidatingElement(element);\n      {\n        warning$1(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n      }\n      setCurrentlyValidatingElement(null);\n    }\n\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n      if (Array.isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step = void 0;\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n    function validatePropTypes(element) {\n      var type = element.type;\n      var name = void 0,\n        propTypes = void 0;\n      if (typeof type === 'function') {\n        // Class or functional component\n        name = type.displayName || type.name;\n        propTypes = type.propTypes;\n      } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n        // ForwardRef\n        var functionName = type.render.displayName || type.render.name || '';\n        name = type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n        propTypes = type.propTypes;\n      } else {\n        return;\n      }\n      if (propTypes) {\n        setCurrentlyValidatingElement(element);\n        checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n        setCurrentlyValidatingElement(null);\n      } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n        propTypesMisspellWarningShown = true;\n        warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n      }\n      if (typeof type.getDefaultProps === 'function') {\n        !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n      }\n    }\n\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n    function validateFragmentProps(fragment) {\n      setCurrentlyValidatingElement(fragment);\n      var keys = Object.keys(fragment.props);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key !== 'children' && key !== 'key') {\n          warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n          break;\n        }\n      }\n      if (fragment.ref !== null) {\n        warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n      }\n      setCurrentlyValidatingElement(null);\n    }\n    function createElementWithValidation(type, props, children) {\n      var validType = isValidElementType(type);\n\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      if (!validType) {\n        var info = '';\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n        var sourceInfo = getSourceInfoErrorAddendum(props);\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n        var typeString = void 0;\n        if (type === null) {\n          typeString = 'null';\n        } else if (Array.isArray(type)) {\n          typeString = 'array';\n        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n          typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\n          info = ' Did you accidentally export a JSX literal instead of a component?';\n        } else {\n          typeString = typeof type;\n        }\n        warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n      }\n      var element = createElement.apply(this, arguments);\n\n      // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n      if (element == null) {\n        return element;\n      }\n\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n      return element;\n    }\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      validatedFactory.type = type;\n      // Legacy hook: remove it\n      {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n      validatePropTypes(newElement);\n      return newElement;\n    }\n    var React = {\n      Children: {\n        map: mapChildren,\n        forEach: forEachChildren,\n        count: countChildren,\n        toArray: toArray,\n        only: onlyChild\n      },\n      createRef: createRef,\n      Component: Component,\n      PureComponent: PureComponent,\n      createContext: createContext,\n      forwardRef: forwardRef,\n      Fragment: REACT_FRAGMENT_TYPE,\n      StrictMode: REACT_STRICT_MODE_TYPE,\n      unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n      unstable_Profiler: REACT_PROFILER_TYPE,\n      createElement: createElementWithValidation,\n      cloneElement: cloneElementWithValidation,\n      createFactory: createFactoryWithValidation,\n      isValidElement: isValidElement,\n      version: ReactVersion,\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\n    };\n    if (enableSuspense) {\n      React.Placeholder = REACT_PLACEHOLDER_TYPE;\n      React.lazy = lazy;\n    }\n    var React$2 = Object.freeze({\n      default: React\n    });\n    var React$3 = React$2 && React || React$2;\n\n    // TODO: decide on the top-level export form.\n    // This is hacky but makes it work with both Rollup and Jest.\n    var react = React$3.default || React$3;\n    module.exports = react;\n  })();\n}","map":{"version":3,"names":["process","env","NODE_ENV","_assign","require","checkPropTypes","ReactVersion","hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_PLACEHOLDER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","enableSuspense","validateFormat","format","undefined","Error","invariant","condition","a","b","c","d","e","f","error","args","argIndex","replace","name","framesToPop","lowPriorityWarning","printWarning","_len","arguments","length","Array","_key","message","console","warn","x","_len2","_key2","apply","concat","lowPriorityWarning$1","warningWithoutStack","_args$map","map","item","g","h","_message","warningWithoutStack$1","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","emptyObject","Object","freeze","Component","props","context","updater","refs","prototype","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","current","seal","ReactCurrentOwner","currentDispatcher","BEFORE_SLASH_RE","describeComponentFrame","source","ownerName","sourceInfo","path","fileName","test","match","pathBeforeSlash","folderName","lineNumber","Resolved","refineResolvedThenable","thenable","_reactStatus","_reactResult","getComponentName","type","tag","$$typeof","renderFn","render","functionName","then","resolvedThenable","ReactDebugCurrentFrame","currentlyValidatingElement","setCurrentlyValidatingElement","element","getCurrentStack","getStackAddendum","stack","owner","_owner","_source","impl","ReactSharedInternals","assign","ReactComponentTreeHook","warning","warning$1","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","call","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","self","_store","enumerable","writable","value","createElement","children","propName","childrenLength","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","pop","result","func","count","releaseTraverseContext","push","traverseAllChildrenImpl","nameSoFar","invokeCallback","getComponentKey","child","nextName","subtreeCount","nextNamePrefix","isArray","iteratorFn","entries","step","ii","next","done","addendum","childrenString","keys","join","traverseAllChildren","component","index","toString","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","forEachContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","array","prefix","escapedPrefix","mapChildren","countChildren","toArray","onlyChild","readContext","observedBits","dispatcher","createContext","defaultValue","calculateChangedBits","_calculateChangedBits","_currentValue","_currentValue2","Provider","Consumer","unstable_read","_context","bind","_currentRenderer","_currentRenderer2","lazy","ctor","resolve","reject","forwardRef","propTypes","isValidElementType","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","typeString","createFactoryWithValidation","validatedFactory","cloneElementWithValidation","React","Children","forEach","only","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","createFactory","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Placeholder","React$2","default","React$3","react","module","exports"],"sources":["C:/Users/USER/Desktop/phonegenerator/node_modules/react/cjs/react.development.js"],"sourcesContent":["/** @license React v16.5.2\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.5.2';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n// Exports ReactDOM.createRoot\n\n\n// Experimental error-boundary API that can recover from errors within a single\n// render phase\n\n// Suspense\nvar enableSuspense = false;\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\n\n\n// In some cases, StrictMode should also double-render lifecycles.\n// This can be confusing for tests though,\n// And it can be bad for performance in production.\n// This feature flag can be used to control the behavior:\n\n\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\n// replay the begin phase of a failed component inside invokeGuardedCallback.\n\n\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\n\n\n// Warn about legacy context API\n\n\n// Gather advanced timing metrics for Profiler subtrees.\n\n\n// Trace which interactions trigger each commit.\n\n\n// Only used in www builds.\n\n\n// Only used in www builds.\n\n\n// React Fire: prevent the value and checked attributes from syncing\n// with their related DOM properties\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function () {};\n\n{\n  validateFormat = function (format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error = void 0;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\n// Relying on the `invariant()` implementation lets us\n// preserve the format and params in the www builds.\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warningWithoutStack = function () {};\n\n{\n  warningWithoutStack = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (args.length > 8) {\n      // Check before the condition to catch violations early.\n      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n    }\n    if (condition) {\n      return;\n    }\n    if (typeof console !== 'undefined') {\n      var _args$map = args.map(function (item) {\n        return '' + item;\n      }),\n          a = _args$map[0],\n          b = _args$map[1],\n          c = _args$map[2],\n          d = _args$map[3],\n          e = _args$map[4],\n          f = _args$map[5],\n          g = _args$map[6],\n          h = _args$map[7];\n\n      var message = 'Warning: ' + format;\n\n      // We intentionally don't use spread (or .apply) because it breaks IE9:\n      // https://github.com/facebook/react/issues/13610\n      switch (args.length) {\n        case 0:\n          console.error(message);\n          break;\n        case 1:\n          console.error(message, a);\n          break;\n        case 2:\n          console.error(message, a, b);\n          break;\n        case 3:\n          console.error(message, a, b, c);\n          break;\n        case 4:\n          console.error(message, a, b, c, d);\n          break;\n        case 5:\n          console.error(message, a, b, c, d, e);\n          break;\n        case 6:\n          console.error(message, a, b, c, d, e, f);\n          break;\n        case 7:\n          console.error(message, a, b, c, d, e, f, g);\n          break;\n        case 8:\n          console.error(message, a, b, c, d, e, f, g, h);\n          break;\n        default:\n          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\n      }\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      var argIndex = 0;\n      var _message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      throw new Error(_message);\n    } catch (x) {}\n  };\n}\n\nvar warningWithoutStack$1 = warningWithoutStack;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar emptyObject = {};\n{\n  Object.freeze(emptyObject);\n}\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null,\n  currentDispatcher: null\n};\n\nvar BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  var sourceInfo = '';\n  if (source) {\n    var path = source.fileName;\n    var fileName = path.replace(BEFORE_SLASH_RE, '');\n    {\n      // In DEV, include code for a common special case:\n      // prefer \"folder/index.js\" instead of just \"index.js\".\n      if (/^index\\./.test(fileName)) {\n        var match = path.match(BEFORE_SLASH_RE);\n        if (match) {\n          var pathBeforeSlash = match[1];\n          if (pathBeforeSlash) {\n            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n            fileName = folderName + '/' + fileName;\n          }\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n};\n\nvar Resolved = 1;\n\n\n\n\nfunction refineResolvedThenable(thenable) {\n  return thenable._reactStatus === Resolved ? thenable._reactResult : null;\n}\n\nfunction getComponentName(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  {\n    if (typeof type.tag === 'number') {\n      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_ASYNC_MODE_TYPE:\n      return 'AsyncMode';\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_PLACEHOLDER_TYPE:\n      return 'Placeholder';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        return 'Context.Consumer';\n      case REACT_PROVIDER_TYPE:\n        return 'Context.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        var renderFn = type.render;\n        var functionName = renderFn.displayName || renderFn.name || '';\n        return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    }\n    if (typeof type.then === 'function') {\n      var thenable = type;\n      var resolvedThenable = refineResolvedThenable(thenable);\n      if (resolvedThenable) {\n        return getComponentName(resolvedThenable);\n      }\n    }\n  }\n  return null;\n}\n\nvar ReactDebugCurrentFrame = {};\n\nvar currentlyValidatingElement = null;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    currentlyValidatingElement = element;\n  }\n}\n\n{\n  // Stack implementation injected by the current renderer.\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = '';\n\n    // Add an extra top frame while an element is being validated\n    if (currentlyValidatingElement) {\n      var name = getComponentName(currentlyValidatingElement.type);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\n    }\n\n    // Delegate to the injected renderer-specific implementation\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentOwner: ReactCurrentOwner,\n  // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n  assign: _assign\n};\n\n{\n  _assign(ReactSharedInternals, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = warningWithoutStack$1;\n\n{\n  warning = function (condition, format) {\n    if (condition) {\n      return;\n    }\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n    // eslint-disable-next-line react-internal/warning-and-invariant-args\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\n  };\n}\n\nvar warning$1 = warning;\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\n\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\n      return c;\n    });\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children) {\n  return traverseAllChildren(children, function () {\n    return null;\n  }, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\n    return child;\n  });\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction readContext(context, observedBits) {\n  var dispatcher = ReactCurrentOwner.currentDispatcher;\n  !(dispatcher !== null) ? invariant(false, 'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;\n  return dispatcher.readContext(context, observedBits);\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    unstable_read: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  context.Consumer = context;\n  context.unstable_read = readContext.bind(null, context);\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nfunction lazy(ctor) {\n  var thenable = null;\n  return {\n    then: function (resolve, reject) {\n      if (thenable === null) {\n        // Lazily create thenable by wrapping in an extra thenable.\n        thenable = ctor();\n        ctor = null;\n      }\n      return thenable.then(resolve, reject);\n    },\n\n    // React uses these fields to store the result.\n    _reactStatus: -1,\n    _reactResult: null\n  };\n}\n\nfunction forwardRef(render) {\n  {\n    if (typeof render !== 'function') {\n      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      !(\n      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\n      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\n    }\n\n    if (render != null) {\n      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\n    }\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar propTypesMisspellWarningShown = void 0;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current.type);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\n  }\n\n  setCurrentlyValidatingElement(element);\n  {\n    warning$1(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\n  }\n  setCurrentlyValidatingElement(null);\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var type = element.type;\n  var name = void 0,\n      propTypes = void 0;\n  if (typeof type === 'function') {\n    // Class or functional component\n    name = type.displayName || type.name;\n    propTypes = type.propTypes;\n  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\n    // ForwardRef\n    var functionName = type.render.displayName || type.render.name || '';\n    name = type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\n    propTypes = type.propTypes;\n  } else {\n    return;\n  }\n  if (propTypes) {\n    setCurrentlyValidatingElement(element);\n    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\n    setCurrentlyValidatingElement(null);\n  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof type.getDefaultProps === 'function') {\n    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  setCurrentlyValidatingElement(fragment);\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\n  }\n\n  setCurrentlyValidatingElement(null);\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n  unstable_Profiler: REACT_PROFILER_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\n};\n\nif (enableSuspense) {\n  React.Placeholder = REACT_PLACEHOLDER_TYPE;\n  React.lazy = lazy;\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3.default || React$3;\n\nmodule.exports = react;\n  })();\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}