{"ast":null,"code":"import React,{Component}from'react';import'../App.css';import Header from\"./header\";import SubTitle from\"./subTitle\";import NumberInput from\"./numberInput\";import Sorter from\"./sorter\";import GeneratedNumbers from\"./generatedNumbers\";import ExportButton from\"./exportButton\";import Statistics from\"./statistics\";import Error from\"./error\";import saveAs from'file-saver';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){super(...arguments);this.state={error:false,message:\"\",limit:1,phoneNumbers:[],min:null,max:null,total:0,sorter:'asc',countryCode:'',startingDigit:'1'// Default starting digit\n};this.generateRandomPhoneNumber=event=>{event.preventDefault();const{limit,countryCode,startingDigit}=this.state;if(limit<=0||limit>10000)return this.setState({error:true,message:\"The number entered exceeds/below the accepted limit\"});let phoneNumbers=[];let phoneNumber=0;while(phoneNumber<limit){let generatedNumber=startingDigit+Math.floor(Math.random()*900000000+100000000).toString().slice(1);// Ensure 10-digit number starting with the specified digit\nphoneNumbers.push(countryCode+generatedNumber);phoneNumber++;}return this.setState({phoneNumbers},async()=>{await this.setStatistics();this.sortPhoneNumbers();});};this.onGetUserInput=async event=>{event.preventDefault();const limit=event.target.value;try{if(Math.floor(Number(limit))){this.setState({limit});}}catch(e){console.log('an error has occurred',e.message);}};this.onCountryCodeChange=async event=>{event.preventDefault();const countryCode=event.target.value;this.setState({countryCode});};this.onStartingDigitChange=async event=>{event.preventDefault();const startingDigit=event.target.value;this.setState({startingDigit});};this.setStatistics=()=>{const{phoneNumbers}=this.state;if(phoneNumbers.length>0){const min=Math.min(...phoneNumbers);const max=Math.max(...phoneNumbers);const total=phoneNumbers.length;this.setState({min,max,total});}};this.exportPhoneNumbers=()=>{const{phoneNumbers}=this.state;if(phoneNumbers.length>0){saveAs(new Blob(phoneNumbers,{type:\"text/csv;charset=utf-8\"}),'phoneNumbers.csv');}};this.sortPhoneNumbers=()=>{const{sorter,phoneNumbers}=this.state;if(!phoneNumbers.length>0)return;if(sorter==='asc'){this.setState({phoneNumbers:phoneNumbers.sort((a,b)=>0-(a>b?-1:1))});}else{this.setState({phoneNumbers:phoneNumbers.sort((a,b)=>0-(a>b?1:-1))});}};this.onSortChange=event=>{event.preventDefault();const sorter=event.target.value;this.setState({sorter},()=>this.sortPhoneNumbers());};}render(){const{error,message,phoneNumbers,min,max,total}=this.state;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SubTitle,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-body\",children:[/*#__PURE__*/_jsx(Error,{error:error,message:message}),/*#__PURE__*/_jsx(NumberInput,{onClick:this.generateRandomPhoneNumber,onChange:this.onGetUserInput,onCountryCodeChange:this.onCountryCodeChange,onStartingDigitChange:this.onStartingDigitChange}),/*#__PURE__*/_jsx(Sorter,{phoneNumbers:phoneNumbers,onChange:this.onSortChange}),/*#__PURE__*/_jsx(GeneratedNumbers,{phoneNumbers:phoneNumbers}),/*#__PURE__*/_jsx(ExportButton,{phoneNumbers:phoneNumbers,onClick:this.exportPhoneNumbers}),/*#__PURE__*/_jsx(Statistics,{phoneNumbers:phoneNumbers,min:min,max:max,total:total})]})]})]});}}export default App;","map":{"version":3,"names":["React","Component","Header","SubTitle","NumberInput","Sorter","GeneratedNumbers","ExportButton","Statistics","Error","saveAs","jsx","_jsx","jsxs","_jsxs","App","constructor","arguments","state","error","message","limit","phoneNumbers","min","max","total","sorter","countryCode","startingDigit","generateRandomPhoneNumber","event","preventDefault","setState","phoneNumber","generatedNumber","Math","floor","random","toString","slice","push","setStatistics","sortPhoneNumbers","onGetUserInput","target","value","Number","e","console","log","onCountryCodeChange","onStartingDigitChange","length","exportPhoneNumbers","Blob","type","sort","a","b","onSortChange","render","children","className","onClick","onChange"],"sources":["C:/Users/USER/Desktop/phonegenerator/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Header from \"./header\";\r\nimport SubTitle from \"./subTitle\";\r\nimport NumberInput from \"./numberInput\";\r\nimport Sorter from \"./sorter\";\r\nimport GeneratedNumbers from \"./generatedNumbers\";\r\nimport ExportButton from \"./exportButton\";\r\nimport Statistics from \"./statistics\";\r\nimport Error from \"./error\";\r\nimport saveAs from 'file-saver';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    error: false,\r\n    message: \"\",\r\n    limit: 1,\r\n    phoneNumbers: [],\r\n    min: null,\r\n    max: null,\r\n    total: 0,\r\n    sorter: 'asc',\r\n    countryCode: '',\r\n    startingDigit: '1' // Default starting digit\r\n  };\r\n\r\n  generateRandomPhoneNumber = event => {\r\n    event.preventDefault();\r\n    const { limit, countryCode, startingDigit } = this.state;\r\n    if (limit <= 0 || limit > 10000) return this.setState({\r\n      error: true,\r\n      message: \"The number entered exceeds/below the accepted limit\"\r\n    });\r\n    let phoneNumbers = [];\r\n    let phoneNumber = 0;\r\n    while (phoneNumber < limit) {\r\n      let generatedNumber = startingDigit + Math.floor(Math.random() * 900000000 + 100000000).toString().slice(1); // Ensure 10-digit number starting with the specified digit\r\n      phoneNumbers.push(countryCode + generatedNumber);\r\n      phoneNumber++;\r\n    }\r\n    return this.setState({\r\n      phoneNumbers\r\n    }, async () => {\r\n      await this.setStatistics();\r\n      this.sortPhoneNumbers()\r\n    });\r\n  };\r\n\r\n  onGetUserInput = async event => {\r\n    event.preventDefault();\r\n    const limit = event.target.value;\r\n    try {\r\n      if (Math.floor(Number(limit))) {\r\n        this.setState({\r\n          limit\r\n        })\r\n      }\r\n    } catch (e) {\r\n      console.log('an error has occurred', e.message)\r\n    }\r\n  };\r\n\r\n  onCountryCodeChange = async event => {\r\n    event.preventDefault();\r\n    const countryCode = event.target.value;\r\n    this.setState({ countryCode });\r\n  };\r\n\r\n  onStartingDigitChange = async event => {\r\n    event.preventDefault();\r\n    const startingDigit = event.target.value;\r\n    this.setState({ startingDigit });\r\n  };\r\n\r\n  setStatistics = () => {\r\n    const { phoneNumbers } = this.state;\r\n    if (phoneNumbers.length > 0) {\r\n      const min = Math.min(...phoneNumbers);\r\n      const max = Math.max(...phoneNumbers);\r\n      const total = phoneNumbers.length;\r\n      this.setState({\r\n        min,\r\n        max,\r\n        total\r\n      })\r\n    }\r\n  };\r\n\r\n  exportPhoneNumbers = () => {\r\n    const { phoneNumbers } = this.state;\r\n    if (phoneNumbers.length > 0) {\r\n      saveAs(new Blob(phoneNumbers, { type: \"text/csv;charset=utf-8\" }), 'phoneNumbers.csv')\r\n    }\r\n  };\r\n\r\n  sortPhoneNumbers = () => {\r\n    const { sorter, phoneNumbers } = this.state;\r\n    if (!phoneNumbers.length > 0) return;\r\n    if(sorter === 'asc'){\r\n      this.setState({\r\n        phoneNumbers : phoneNumbers.sort((a,b) => 0 - (a > b ? -1 : 1))\r\n      });\r\n    } else {\r\n      this.setState({\r\n        phoneNumbers : phoneNumbers.sort((a,b) => 0 - (a > b ? 1 : -1))\r\n      })\r\n    }\r\n  };\r\n\r\n  onSortChange = event => {\r\n    event.preventDefault();\r\n    const sorter = event.target.value;\r\n    this.setState({\r\n      sorter\r\n    }, () => this.sortPhoneNumbers());\r\n  };\r\n\r\n  render() {\r\n    const { error, message, phoneNumbers, min, max, total } = this.state;\r\n    return (\r\n        <div>\r\n          <Header/>\r\n          <div>\r\n            <SubTitle/>\r\n            <div className=\"App-body\">\r\n              <Error\r\n                  error={error}\r\n                  message={message}\r\n              />\r\n              <NumberInput\r\n                  onClick={this.generateRandomPhoneNumber}\r\n                  onChange={this.onGetUserInput}\r\n                  onCountryCodeChange={this.onCountryCodeChange}\r\n                  onStartingDigitChange={this.onStartingDigitChange}\r\n              />\r\n              <Sorter\r\n                  phoneNumbers={phoneNumbers}\r\n                  onChange={this.onSortChange}\r\n              />\r\n              <GeneratedNumbers\r\n                  phoneNumbers={phoneNumbers}\r\n              />\r\n              <ExportButton\r\n                  phoneNumbers={phoneNumbers}\r\n                  onClick={this.exportPhoneNumbers}\r\n              />\r\n              <Statistics\r\n                  phoneNumbers={phoneNumbers}\r\n                  min={min}\r\n                  max={max}\r\n                  total={total}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,YAAY,CACnB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,MAAM,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,GAAG,QAAS,CAAAd,SAAU,CAAAe,YAAA,WAAAC,SAAA,OAC1BC,KAAK,CAAG,CACNC,KAAK,CAAE,KAAK,CACZC,OAAO,CAAE,EAAE,CACXC,KAAK,CAAE,CAAC,CACRC,YAAY,CAAE,EAAE,CAChBC,GAAG,CAAE,IAAI,CACTC,GAAG,CAAE,IAAI,CACTC,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,EAAE,CACfC,aAAa,CAAE,GAAI;AACrB,CAAC,MAEDC,yBAAyB,CAAGC,KAAK,EAAI,CACnCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAEV,KAAK,CAAEM,WAAW,CAAEC,aAAc,CAAC,CAAG,IAAI,CAACV,KAAK,CACxD,GAAIG,KAAK,EAAI,CAAC,EAAIA,KAAK,CAAG,KAAK,CAAE,MAAO,KAAI,CAACW,QAAQ,CAAC,CACpDb,KAAK,CAAE,IAAI,CACXC,OAAO,CAAE,qDACX,CAAC,CAAC,CACF,GAAI,CAAAE,YAAY,CAAG,EAAE,CACrB,GAAI,CAAAW,WAAW,CAAG,CAAC,CACnB,MAAOA,WAAW,CAAGZ,KAAK,CAAE,CAC1B,GAAI,CAAAa,eAAe,CAAGN,aAAa,CAAGO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,SAAS,CAAG,SAAS,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;AAC7GjB,YAAY,CAACkB,IAAI,CAACb,WAAW,CAAGO,eAAe,CAAC,CAChDD,WAAW,EAAE,CACf,CACA,MAAO,KAAI,CAACD,QAAQ,CAAC,CACnBV,YACF,CAAC,CAAE,SAAY,CACb,KAAM,KAAI,CAACmB,aAAa,CAAC,CAAC,CAC1B,IAAI,CAACC,gBAAgB,CAAC,CAAC,CACzB,CAAC,CAAC,CACJ,CAAC,MAEDC,cAAc,CAAG,KAAM,CAAAb,KAAK,EAAI,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAV,KAAK,CAAGS,KAAK,CAACc,MAAM,CAACC,KAAK,CAChC,GAAI,CACF,GAAIV,IAAI,CAACC,KAAK,CAACU,MAAM,CAACzB,KAAK,CAAC,CAAC,CAAE,CAC7B,IAAI,CAACW,QAAQ,CAAC,CACZX,KACF,CAAC,CAAC,CACJ,CACF,CAAE,MAAO0B,CAAC,CAAE,CACVC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEF,CAAC,CAAC3B,OAAO,CAAC,CACjD,CACF,CAAC,MAED8B,mBAAmB,CAAG,KAAM,CAAApB,KAAK,EAAI,CACnCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAJ,WAAW,CAAGG,KAAK,CAACc,MAAM,CAACC,KAAK,CACtC,IAAI,CAACb,QAAQ,CAAC,CAAEL,WAAY,CAAC,CAAC,CAChC,CAAC,MAEDwB,qBAAqB,CAAG,KAAM,CAAArB,KAAK,EAAI,CACrCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAH,aAAa,CAAGE,KAAK,CAACc,MAAM,CAACC,KAAK,CACxC,IAAI,CAACb,QAAQ,CAAC,CAAEJ,aAAc,CAAC,CAAC,CAClC,CAAC,MAEDa,aAAa,CAAG,IAAM,CACpB,KAAM,CAAEnB,YAAa,CAAC,CAAG,IAAI,CAACJ,KAAK,CACnC,GAAII,YAAY,CAAC8B,MAAM,CAAG,CAAC,CAAE,CAC3B,KAAM,CAAA7B,GAAG,CAAGY,IAAI,CAACZ,GAAG,CAAC,GAAGD,YAAY,CAAC,CACrC,KAAM,CAAAE,GAAG,CAAGW,IAAI,CAACX,GAAG,CAAC,GAAGF,YAAY,CAAC,CACrC,KAAM,CAAAG,KAAK,CAAGH,YAAY,CAAC8B,MAAM,CACjC,IAAI,CAACpB,QAAQ,CAAC,CACZT,GAAG,CACHC,GAAG,CACHC,KACF,CAAC,CAAC,CACJ,CACF,CAAC,MAED4B,kBAAkB,CAAG,IAAM,CACzB,KAAM,CAAE/B,YAAa,CAAC,CAAG,IAAI,CAACJ,KAAK,CACnC,GAAII,YAAY,CAAC8B,MAAM,CAAG,CAAC,CAAE,CAC3B1C,MAAM,CAAC,GAAI,CAAA4C,IAAI,CAAChC,YAAY,CAAE,CAAEiC,IAAI,CAAE,wBAAyB,CAAC,CAAC,CAAE,kBAAkB,CAAC,CACxF,CACF,CAAC,MAEDb,gBAAgB,CAAG,IAAM,CACvB,KAAM,CAAEhB,MAAM,CAAEJ,YAAa,CAAC,CAAG,IAAI,CAACJ,KAAK,CAC3C,GAAI,CAACI,YAAY,CAAC8B,MAAM,CAAG,CAAC,CAAE,OAC9B,GAAG1B,MAAM,GAAK,KAAK,CAAC,CAClB,IAAI,CAACM,QAAQ,CAAC,CACZV,YAAY,CAAGA,YAAY,CAACkC,IAAI,CAAC,CAACC,CAAC,CAACC,CAAC,GAAK,CAAC,EAAID,CAAC,CAAGC,CAAC,CAAG,CAAC,CAAC,CAAG,CAAC,CAAC,CAChE,CAAC,CAAC,CACJ,CAAC,IAAM,CACL,IAAI,CAAC1B,QAAQ,CAAC,CACZV,YAAY,CAAGA,YAAY,CAACkC,IAAI,CAAC,CAACC,CAAC,CAACC,CAAC,GAAK,CAAC,EAAID,CAAC,CAAGC,CAAC,CAAG,CAAC,CAAG,CAAC,CAAC,CAAC,CAChE,CAAC,CAAC,CACJ,CACF,CAAC,MAEDC,YAAY,CAAG7B,KAAK,EAAI,CACtBA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,KAAM,CAAAL,MAAM,CAAGI,KAAK,CAACc,MAAM,CAACC,KAAK,CACjC,IAAI,CAACb,QAAQ,CAAC,CACZN,MACF,CAAC,CAAE,IAAM,IAAI,CAACgB,gBAAgB,CAAC,CAAC,CAAC,CACnC,CAAC,EAEDkB,MAAMA,CAAA,CAAG,CACP,KAAM,CAAEzC,KAAK,CAAEC,OAAO,CAAEE,YAAY,CAAEC,GAAG,CAAEC,GAAG,CAAEC,KAAM,CAAC,CAAG,IAAI,CAACP,KAAK,CACpE,mBACIJ,KAAA,QAAA+C,QAAA,eACEjD,IAAA,CAACV,MAAM,GAAC,CAAC,cACTY,KAAA,QAAA+C,QAAA,eACEjD,IAAA,CAACT,QAAQ,GAAC,CAAC,cACXW,KAAA,QAAKgD,SAAS,CAAC,UAAU,CAAAD,QAAA,eACvBjD,IAAA,CAACH,KAAK,EACFU,KAAK,CAAEA,KAAM,CACbC,OAAO,CAAEA,OAAQ,CACpB,CAAC,cACFR,IAAA,CAACR,WAAW,EACR2D,OAAO,CAAE,IAAI,CAAClC,yBAA0B,CACxCmC,QAAQ,CAAE,IAAI,CAACrB,cAAe,CAC9BO,mBAAmB,CAAE,IAAI,CAACA,mBAAoB,CAC9CC,qBAAqB,CAAE,IAAI,CAACA,qBAAsB,CACrD,CAAC,cACFvC,IAAA,CAACP,MAAM,EACHiB,YAAY,CAAEA,YAAa,CAC3B0C,QAAQ,CAAE,IAAI,CAACL,YAAa,CAC/B,CAAC,cACF/C,IAAA,CAACN,gBAAgB,EACbgB,YAAY,CAAEA,YAAa,CAC9B,CAAC,cACFV,IAAA,CAACL,YAAY,EACTe,YAAY,CAAEA,YAAa,CAC3ByC,OAAO,CAAE,IAAI,CAACV,kBAAmB,CACpC,CAAC,cACFzC,IAAA,CAACJ,UAAU,EACPc,YAAY,CAAEA,YAAa,CAC3BC,GAAG,CAAEA,GAAI,CACTC,GAAG,CAAEA,GAAI,CACTC,KAAK,CAAEA,KAAM,CAChB,CAAC,EACC,CAAC,EACH,CAAC,EACH,CAAC,CAEZ,CACF,CAEA,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}